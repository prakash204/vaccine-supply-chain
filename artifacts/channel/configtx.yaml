Organizations:
    - &OrdererOrg
        Name: OrdererOrg
        ID: OrdererMSP
        MSPDir: crypto-config/ordererOrganizations/example.com/msp
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('OrdererMSP.member')"
            Writers:
                Type: Signature
                Rule: "OR('OrdererMSP.member')"
            Admins:
                Type: Signature
                Rule: "OR('OrdererMSP.admin')"
        OrdererEndpoints:
            - orderer.example.com:7050

    - &Manufacturer
        Name: ManufacturerMSP
        ID: ManufacturerMSP
        MSPDir: crypto-config/peerOrganizations/manufacturer.example.com/msp
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('ManufacturerMSP.admin', 'ManufacturerMSP.peer', 'ManufacturerMSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('ManufacturerMSP.admin', 'ManufacturerMSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('ManufacturerMSP.admin')"
            Endorsement:
                Type: Signature
                Rule: "OR('ManufacturerMSP.peer')"
            # CustomPolicy:
            #     Type: Signature
            #     Rule: "OR('ManufacturerMSP.admin', 'ManufacturerMSP.client')"

        AnchorPeers:
            - Host: peer0.manufacturer.example.com
              Port: 7051

    - &Distribution
        Name: DistributionMSP
        ID: DistributionMSP
        MSPDir: crypto-config/peerOrganizations/distribution.example.com/msp
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('DistributionMSP.admin', 'DistributionMSP.peer', 'DistributionMSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('DistributionMSP.admin', 'DistributionMSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('DistributionMSP.admin')"
            Endorsement:
                Type: Signature
                Rule: "OR('DistributionMSP.peer')"
            # CustomPolicy:
            #     Type: Signature
            #     Rule: "OR('ManufacturerMSP.admin')"

        AnchorPeers:
            - Host: peer0.distribution.example.com
              Port: 8051

    - &Med
        Name: MedMSP
        ID: MedMSP
        MSPDir: crypto-config/peerOrganizations/med.example.com/msp
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('MedMSP.admin', 'MedMSP.peer', 'MedMSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('MedMSP.admin', 'MedMSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('MedMSP.admin')"
            Endorsement:
                Type: Signature
                Rule: "OR('MedMSP.peer')"
            # CustomPolicy:
            #     Type: Signature
            #     Rule: "OR('ManufacturerMSP.admin')"

        AnchorPeers:
            - Host: peer0.med.example.com
              Port: 9051

    - &Beneficiary
        Name: BeneficiaryMSP
        ID: BeneficiaryMSP
        MSPDir: crypto-config/peerOrganizations/beneficiary.example.com/msp
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('BeneficiaryMSP.admin', 'BeneficiaryMSP.peer', 'BeneficiaryMSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('BeneficiaryMSP.admin', 'BeneficiaryMSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('BeneficiaryMSP.admin')"
            Endorsement:
                Type: Signature
                Rule: "OR('BeneficiaryMSP.peer')"
            # CustomPolicy:
            #     Type: Signature
            #     Rule: "OR('ManufacturerMSP.admin')"

        AnchorPeers:
            - Host: peer0.beneficiary.example.com
              Port: 10051

    - &Iot
        Name: IotMSP
        ID: IotMSP
        MSPDir: crypto-config/peerOrganizations/iot.example.com/msp
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('IotMSP.admin', 'IotMSP.peer', 'IotMSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('IotMSP.admin', 'IotMSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('IotMSP.admin')"
            Endorsement:
                Type: Signature
                Rule: "OR('IotMSP.peer')"
            # CustomPolicy:
            #     Type: Signature
            #     Rule: "OR('ManufacturerMSP.admin')"

        AnchorPeers:
            - Host: peer0.iot.example.com
              Port: 11051

Capabilities:
    Channel: &ChannelCapabilities
        V2_0: true
    Orderer: &OrdererCapabilities
        V2_0: true
    Application: &ApplicationCapabilities
        V2_0: true

Application: &ApplicationDefaults
    ACLs: &ACLsDefault
        # This section provides defaults for policies for various resources
        # in the system. These "resources" could be functions on system chaincodes
        # (e.g., "GetBlockByNumber" on the "qscc" system chaincode) or other resources
        # (e.g.,who can receive Block events). This section does NOT specify the resource's
        # definition or API, but just the ACL policy for it.
        #
        # User's can override these defaults with their own policy mapping by defining the
        # mapping under ACLs in their channel definition

        #---New Lifecycle System Chaincode (_lifecycle) function to policy mapping for access control--#

        # ACL policy for _lifecycle's "CommitChaincodeDefinition" function
        _lifecycle/CommitChaincodeDefinition: /Channel/Application/Writers

        # ACL policy for _lifecycle's "QueryChaincodeDefinition" function
        _lifecycle/QueryChaincodeDefinition: /Channel/Application/Readers

        # ACL policy for _lifecycle's "QueryNamespaceDefinitions" function
        _lifecycle/QueryNamespaceDefinitions: /Channel/Application/Readers

        #---Lifecycle System Chaincode (lscc) function to policy mapping for access control---#

        # ACL policy for lscc's "getid" function
        lscc/ChaincodeExists: /Channel/Application/Readers

        # ACL policy for lscc's "getdepspec" function
        lscc/GetDeploymentSpec: /Channel/Application/Readers

        # ACL policy for lscc's "getccdata" function
        lscc/GetChaincodeData: /Channel/Application/Readers

        # ACL Policy for lscc's "getchaincodes" function
        lscc/GetInstantiatedChaincodes: /Channel/Application/Readers

        #---Query System Chaincode (qscc) function to policy mapping for access control---#

        # ACL policy for qscc's "GetChainInfo" function
        qscc/GetChainInfo: /Channel/Application/Readers

        # ACL policy for qscc's "GetBlockByNumber" function
        qscc/GetBlockByNumber: /Channel/Application/Readers

        # ACL policy for qscc's  "GetBlockByHash" function
        qscc/GetBlockByHash: /Channel/Application/Readers

        # ACL policy for qscc's "GetTransactionByID" function
        qscc/GetTransactionByID: /Channel/Application/Readers
        # qscc/GetTransactionByID: /Channel/Application/CustomPolicy

        # ACL policy for qscc's "GetBlockByTxID" function
        qscc/GetBlockByTxID: /Channel/Application/Readers

        #---Configuration System Chaincode (cscc) function to policy mapping for access control---#

        # ACL policy for cscc's "GetConfigBlock" function
        cscc/GetConfigBlock: /Channel/Application/Readers

        # ACL policy for cscc's "GetConfigTree" function
        cscc/GetConfigTree: /Channel/Application/Readers

        # ACL policy for cscc's "SimulateConfigTreeUpdate" function
        cscc/SimulateConfigTreeUpdate: /Channel/Application/Readers

        #---Miscellanesous peer function to policy mapping for access control---#

        # ACL policy for invoking chaincodes on peer
        peer/Propose: /Channel/Application/Writers
        # peer/Propose: /Channel/Application/Restrict

        # ACL policy for chaincode to chaincode invocation
        peer/ChaincodeToChaincode: /Channel/Application/Readers

        #---Events resource to policy mapping for access control###---#

        # ACL policy for sending block events
        event/Block: /Channel/Application/Readers

        # ACL policy for sending filtered block events
        event/FilteredBlock: /Channel/Application/Readers


    Organizations:
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        LifecycleEndorsement:
            Type: ImplicitMeta
            Rule: "MAJORITY Endorsement"
        Endorsement:
            Type: ImplicitMeta
            Rule: "MAJORITY Endorsement"
        # Restrict:
        #     Type: ImplicitMeta
        #     Rule: "ANY CustomPolicy"

    Capabilities:
        <<: *ApplicationCapabilities

Orderer: &OrdererDefaults

    OrdererType: etcdraft
    EtcdRaft:
        Consenters:
          - Host: orderer.example.com
            Port: 7050
            ClientTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt
            ServerTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt
          - Host: orderer2.example.com
            Port: 8050
            ClientTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/tls/server.crt
            ServerTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/tls/server.crt
          - Host: orderer3.example.com
            Port: 9050
            ClientTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer3.example.com/tls/server.crt
            ServerTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer3.example.com/tls/server.crt
          - Host: orderer4.example.com
            Port: 10050
            ClientTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer4.example.com/tls/server.crt
            ServerTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer4.example.com/tls/server.crt
          - Host: orderer5.example.com
            Port: 11050
            ClientTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer5.example.com/tls/server.crt
            ServerTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer5.example.com/tls/server.crt

    Addresses:
        - orderer.example.com:7050
        - orderer2.example.com:8050
        - orderer3.example.com:9050
        - orderer4.example.com:10050
        - orderer5.example.com:11050


    BatchTimeout: 2s

    BatchSize:
        MaxMessageCount: 500
        AbsoluteMaxBytes: 10 MB
        PreferredMaxBytes: 2 MB

    Organizations:

    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        BlockValidation:
            Type: ImplicitMeta
            Rule: "ANY Writers"

Channel: &ChannelDefaults
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"

    Capabilities:
        <<: *ChannelCapabilities


Profiles:
    BasicChannel:
        Consortium: SampleConsortium
        <<: *ChannelDefaults
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *Manufacturer
                - *Distribution
                - *Med
                - *Beneficiary
                - *Iot
            Capabilities:
                <<: *ApplicationCapabilities
    OrdererGenesis:
        <<: *ChannelDefaults
        Capabilities:
            <<: *ChannelCapabilities
        Orderer:
            <<: *OrdererDefaults
            Organizations:
                - *OrdererOrg
            Capabilities:
                <<: *OrdererCapabilities
        Consortiums:
            SampleConsortium:
                Organizations:
                  - *Manufacturer
                  - *Distribution
                  - *Med
                  - *Beneficiary
                  - *Iot
